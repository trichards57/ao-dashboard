@page "/roles"
@using Dashboard.Client.Services
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims

@attribute [Authorize(Policy = "CanEditRoles")]

@rendermode InteractiveAuto

@inject IRoleService RoleService

<Container Title="User Roles" Expands>
    <table>
        <thead>
            <tr>
                <th>Role</th>
                <th>Vehicle Configuration</th>
                <th>VOR Data</th>
                <th>User Role</th>
                <th>Role Permissions</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var r in roles.OrderBy(r=>r.Name))
            {
                <tr>
                    <td>@r.Name</td>
                    <td>@r.VehicleConfiguration</td>
                    <td>@r.VorData</td>
                    <td>@r.Permissions</td>
                    <td>@(r.Name == "Administrator" ? "Write" : "Deny")</td>
                    <td class="edit">
                        @if (r.Name != "Administrator")
                        {
                            <a href="/roles/@r.Id/edit">Edit</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</Container>

@code
{
    private List<RolePermissions> roles = new();

    protected override async Task OnInitializedAsync()
    {
        await foreach (var r in RoleService.GetRoles())
        {
            roles.Add(r);
        }
    }
}
