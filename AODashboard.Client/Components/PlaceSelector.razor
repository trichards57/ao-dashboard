@using AODashboard.Client.Model
@using AODashboard.Client.Services

@inject IPlaceService PlaceService

<MudToolBar>
    <MudGrid>
        <MudItem sm="4">
            <MudSelect Label="Region" T="Model.Region" @bind-Value="region" @bind-Value:after="RegionChanged">
                <MudSelectItem Value="Model.Region.All">All</MudSelectItem>
                <MudSelectItem Value="Model.Region.EastOfEngland">East of England</MudSelectItem>
                <MudSelectItem Value="Model.Region.EastMidlands">East Midlands</MudSelectItem>
                <MudSelectItem Value="Model.Region.London">London</MudSelectItem>
                <MudSelectItem Value="Model.Region.NorthEast">North East</MudSelectItem>
                <MudSelectItem Value="Model.Region.NorthWest">North West</MudSelectItem>
                <MudSelectItem Value="Model.Region.SouthEast">South East</MudSelectItem>
                <MudSelectItem Value="Model.Region.SouthWest">South West</MudSelectItem>
                <MudSelectItem Value="Model.Region.WestMidlands">West Midlands</MudSelectItem>
            </MudSelect>
        </MudItem>
        <MudItem sm="4">
            <MudSelect Label="District" T="string" @bind-Value="selectedDistrict" @bind-Value:after="DistrictChanged" Disabled="!districts.Any()">
                <MudSelectItem Value="@("All")">All</MudSelectItem>
                @foreach (var district in districts)
                {
                    <MudSelectItem Value="@district">@district</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem sm="4">
            <MudSelect Label="Hub" T="string" @bind-Value="selectedHub" @bind-Value:after="HubChanged" Disabled="!hubs.Any()">
                <MudSelectItem Value="@("All")">All</MudSelectItem>
                @foreach (var hub in hubs)
                {
                    <MudSelectItem Value="@hub">@hub</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
    </MudGrid>
</MudToolBar>

@code {
    private Model.Region region = Model.Region.All;
    private IEnumerable<string> districts = new List<string>();
    private IEnumerable<string> hubs = new List<string>();
    private string selectedDistrict = "All";
    private string selectedHub = "All";

    [Parameter]
    public EventCallback<Place> ValueChanged { get; set; }

    private async Task RegionChanged()
    {
        if (region == Model.Region.All)
        {
            districts = new List<string>();
        }
        else
        {
            districts = (await PlaceService.GetDistrictNames(region)).Names;
        }

        selectedDistrict = "All";

        await ValueChanged.InvokeAsync(new Place { Region = region, District = selectedDistrict, Hub = selectedHub });
    }

    private async Task DistrictChanged()
    {
        if (selectedDistrict == "All")
        {
            hubs = new List<string>();
        }
        else
        {
            hubs = (await PlaceService.GetDistrictHubs(region, selectedDistrict)).Names;
        }

        selectedHub = "All";

        await ValueChanged.InvokeAsync(new Place { Region = region, District = selectedDistrict, Hub = selectedHub });
    }

    private async Task HubChanged()
    {
        await ValueChanged.InvokeAsync(new Place { Region = region, District = selectedDistrict, Hub = selectedHub });
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await ValueChanged.InvokeAsync(new Place { Region = region, District = selectedDistrict, Hub = selectedHub });
        }
    }
}
