@page "/"
@using AODashboard.Client.Model
@using AODashboard.Client.Services
@attribute [Authorize(Policy = "CanViewVOR")]
@rendermode InteractiveAuto

@inject IPlaceService PlaceService
@inject IVehicleService VehicleService

<PageTitle>AO Dashboard - Home</PageTitle>

<MudText Typo="Typo.h1">Home</MudText>

<AODashboard.Client.Components.PlaceSelector ValueChanged="UpdateVehicles" />

<div>
    <MudGrid Style="padding-top: 1rem">
        <MudItem xs="12" sm="3">
            <MudCard>
                <MudCardHeader>
                    <MudText Typo="Typo.subtitle1">Vehicle Availability</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <SfAccumulationChart Height="200px" Width="100%">
                        <AccumulationChartSeriesCollection>
                            <AccumulationChartSeries DataSource="@AvailablePoints" XName="Label" YName="Value" Radius="70%" StartAngle="-90" EndAngle="90" InnerRadius="50%" PointColorMapping="Color" />
                        </AccumulationChartSeriesCollection>
                        <AccumulationChartLegendSettings Visible="false" />
                        <AccumulationChartMargin Top="0" Bottom="0" Right="0" Left="0" />
                        <AccumulationChartBorder Width="0" />
                        <AccumulationChartTooltipSettings Enable="true" />
                    </SfAccumulationChart>
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="9">
            <MudCard>
                <MudCardHeader>
                    <MudText Typo="Typo.subtitle1">Historic Availability</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <SfChart Height="200px" Width="100%">
                        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime" />
                        <ChartPrimaryYAxis Maximum="@vorStats.TotalVehicles" Minimum="0" Title="Available Vehicles" />
                        <ChartSeriesCollection>
                            <ChartSeries DataSource="@HistoricAvailablePoints" XName="Date" YName="Value" PointColorMapping="Color" />
                        </ChartSeriesCollection>
                    </SfChart>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</div>

@code
{
    private record class AvailabilityData
    {
        public int Value { get; init; }
        public string Color { get; init; } = "";
        public string Label { get; init; } = "";
    }

    private record class HistoricData
    {
        public int Value { get; init; }
        public string Color { get; init; } = "";
        public DateOnly Date { get; init; }
    }

    private VorStatistics vorStats = default;

    private List<AvailabilityData> AvailablePoints => [
        new AvailabilityData { Value = vorStats.AvailableVehicles, Label = "Available", Color = "var(--mud-palette-primary)" },
        new AvailabilityData { Value = vorStats.VorVehicles, Label = "VOR", Color = "var(--mud-palette-grey-default)" },
    ];

    private List<HistoricData> HistoricAvailablePoints => vorStats.PastAvailability?.Select(x => new HistoricData { Value = x.Value, Date = x.Key, Color = "var(--mud-palette-primary)" }).ToList() ?? [];

    private decimal availablePercent => vorStats.TotalVehicles == 0 ? 0 : (vorStats.AvailableVehicles / vorStats.TotalVehicles) * 100;

    private async Task UpdateVehicles(Place place)
    {
        vorStats = await VehicleService.GetStatisticsByPlace(place.Region, place.District == "All" ? null : place.District, place.Hub == "All" ? null : place.Hub);
    }
}